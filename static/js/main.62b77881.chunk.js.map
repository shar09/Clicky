{"version":3,"sources":["components/Wrapper/index.js","components/Navbar/index.js","components/Header/index.js","components/Container/index.js","components/Footer/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Navbar","href","result","score","topScore","Header","Container","characterData","map","character","shake","key","id","onClick","handleClick","src","img","alt","name","Footer","App","initialState","characters","state","bind","console","log","this","clicked","setState","Math","max","arr","temp","index","ctr","length","floor","random","shuffle","Component","ReactDOM","render","document","getElementById"],"mappings":"4pCASeA,MANf,SAAiBC,GACd,OACG,yBAAKC,UAAU,WAAf,IAA2BD,EAAME,SAAjC,M,MCQSC,MAVf,SAAgBH,GACb,OACG,yBAAKC,UAAU,OACZ,wBAAIA,UAAU,aAAY,uBAAGG,KAAK,IAAR,gBAC1B,wBAAIH,UAAU,aAAaD,EAAMK,QACjC,wBAAIJ,UAAU,aAAd,UAAkCD,EAAMM,MAAxC,iBAA6DN,EAAMO,Y,MCI7DC,MATf,WACG,OACG,yBAAKP,UAAU,UACZ,wBAAIA,UAAU,SAAd,gBACA,wBAAIA,UAAU,WAAd,yE,MCSMQ,MAbf,SAAmBT,GAChB,OACG,yBAAKC,UAAU,aACXD,EAAMU,cAAcC,KAAI,SAAAC,GAAS,OAClC,yBAAKX,UAAS,eAAUD,EAAMa,MAAQ,QAAS,IAAMC,IAAOF,EAAUG,GACnEC,QAAW,WAAOhB,EAAMiB,YAAYL,EAAUG,MAC9C,yBAAKG,IAAON,EAAUO,IAAKC,IAAMR,EAAUS,a,MCAxCC,MANf,WACG,OACG,yD,OC0FSC,E,kDAtFb,WAAYvB,GAAQ,IAAD,8BACnB,cAAMA,IAEDwB,aAAe,CAClBC,aACAnB,MAAO,EACPD,OAAQ,4BAEV,EAAKqB,MAAQ,CACXF,aAAc,EAAKA,aACnBjB,SAAU,GAEZ,EAAKU,YAAc,EAAKA,YAAYU,KAAjB,gBACnBC,QAAQC,IAAR,gBAbmB,E,wDAgBPd,GAEV,IAFc,gBAkBOe,KAAKJ,MAAMF,aAAaC,YAlB/B,IAkBd,IAAI,EAAJ,qBAAyD,CAAC,IAAlDb,EAAiD,QACvD,GAAGA,EAAUG,KAAOA,IAA4B,IAAtBH,EAAUmB,QAAkB,CACpDH,QAAQC,IAAIjB,EAAUmB,SACtBH,QAAQC,IAAIC,KAAKN,cAFmC,oBAI/BM,KAAKJ,MAAMF,aAAaC,YAJO,IAIpD,IAAI,EAAJ,qBAAyD,SAC7CM,SAAU,GAL8B,8BAQpD,OAAOD,KAAKE,SAAS,CACnBR,aAAcM,KAAKN,aACnBjB,SAAUuB,KAAKJ,MAAMnB,aA7Bb,8BAkCd,IAAMkB,EAAaK,KAAKJ,MAAMF,aAAaC,WAAWd,KAAI,SAAAC,GAIxD,OAHGA,EAAUG,KAAOA,IAClBH,EAAS,SAAc,GAElBA,KAGLN,EAAQwB,KAAKJ,MAAMF,aAAalB,MAAQ,EAC5CsB,QAAQC,IAAIvB,GACZ,IAAIC,EAAWuB,KAAKJ,MAAMnB,SAC1BA,EAAW0B,KAAKC,IAAI5B,EAAOC,GA1CX,SAAC4B,GAGf,IAFA,IAAsBC,EAAMC,EAAxBC,EAAMH,EAAII,OAEPD,EAAM,GAEXD,EAAQJ,KAAKO,MAAMP,KAAKQ,SAAWH,GAInCF,EAAOD,IAFLG,GAGFH,EAAIG,GAAOH,EAAIE,GACfF,EAAIE,GAASD,EAgCjBM,CAAQjB,GACRK,KAAKE,SAAS,CACZR,aAAc,CACZC,aACAnB,QACAD,OAAQ,gBAEVE,aAEFqB,QAAQC,IAAIJ,K,+BAGJ,IAAD,EAC+BK,KAAKJ,MAAMF,aAAzCC,EADD,EACCA,WAAYnB,EADb,EACaA,MAAOD,EADpB,EACoBA,OAC3B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQA,OAAUA,EAAQC,MAASA,EAAOC,SAAYuB,KAAKJ,MAAMnB,WACjE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWG,cAAiBe,EAAYR,YAAea,KAAKb,YAAaJ,OAAQP,GAASwB,KAAKJ,MAAMnB,WACrG,kBAAC,EAAD,W,GAjFUoC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.62b77881.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n   return (\n      <div className=\"wrapper\"> {props.children} </div>\n   );\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n   return (\n      <div className=\"nav\">\n         <h3 className=\"nav-items\"><a href=\"\">Clicky Game</a></h3>\n         <h3 className=\"nav-items\">{props.result}</h3>\n         <h3 className=\"nav-items\">Score: {props.score} | Top Score: {props.topScore}</h3>\n      </div>\n   );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n   return(\n      <div className=\"header\">\n         <h1 className=\"title\">Clicky Game!</h1>\n         <h3 className=\"caption\">Click an image to earn points but dont click on any more than once!</h3>\n      </div>\n   );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n   return(\n      <div className=\"container\">\n        { props.characterData.map(character => (         \n         <div className={`card ${props.shake ? \"shake\": \"\"}`} key = {character.id} \n            onClick = {() => {props.handleClick(character.id)}}> \n            <img src = {character.img} alt= {character.name} />\n         </div>\n         ))}\n      </div>\n   );\n}\n\nexport default Container;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n   return(\n      <footer>Copyright 2020 Â®.</footer>\n   );\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {  \n  constructor(props) {\n  super(props)\n\n  this.initialState = {\n    characters,\n    score: 0,\n    result: \"Click an image to begin!\"\n  };\n  this.state = {\n    initialState: this.initialState,   \n    topScore: 0\n  };\n  this.handleClick = this.handleClick.bind(this);\n  console.log(this);\n}\n\n  handleClick(id) {\n    //Shuffle cards\n    const shuffle = (arr) => {\n      var ctr = arr.length, temp, index;\n      // While there are elements in the array\n      while (ctr > 0) {\n        // Pick a random index\n        index = Math.floor(Math.random() * ctr);\n        // Decrease ctr by 1\n          ctr--;\n        // And swap the last element with it\n        temp = arr[ctr];\n        arr[ctr] = arr[index];\n        arr[index] = temp;\n      }\n      return arr;\n    }\n    //Loop through characters and check if card with clicked:true is clicked\n    for(let character of this.state.initialState.characters) {\n      if(character.id === id && character.clicked === true) {\n        console.log(character.clicked);\n        console.log(this.initialState);\n        //Loop through characters to set clicked equal to false\n        for(let character of this.state.initialState.characters) {\n          character.clicked = false;\n        }\n        //Returning state so rest of the function is not executed\n        return this.setState({\n          initialState: this.initialState,\n          topScore: this.state.topScore\n        });\n      }\n    }\n    //Loop through characters and change clicked to true for matched id\n    const characters = this.state.initialState.characters.map(character => {\n      if(character.id === id) {\n        character['clicked'] = true;\n      }\n      return character;\n    });\n    //Update score, topScore and set state\n    let score = this.state.initialState.score + 1;\n    console.log(score);\n    let topScore = this.state.topScore;\n    topScore = Math.max(score, topScore); \n    shuffle(characters);\n    this.setState({\n      initialState: {\n        characters,\n        score,\n        result: \"You clicked!\"\n      },\n      topScore\n    })\n    console.log(characters);\n  }\n  \n  render() {\n    const { characters, score, result } = this.state.initialState;\n    return (\n      <Wrapper>\n        <Navbar result = {result} score = {score} topScore = {this.state.topScore}/>\n        <Header />\n        <Container characterData = {characters} handleClick = {this.handleClick} shake={!score && this.state.topScore}/>\n        <Footer/>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}